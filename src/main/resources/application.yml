spring:
  datasource:
<<<<<<< refs/remotes/origin/develop
<<<<<<< refs/remotes/origin/develop
    url: jdbc:postgresql://${CLOUD_AWS_DB_HOST}:5432/${CLOUD_AWS_DB_DATABASE_NAME}
    username: ${CLOUD_AWS_DB_USERNAME}
    password: ${CLOUD_AWS_DB_PASSWORD}
    driverClassName: org.postgresql.Driver
#  datasource:
#    url: jdbc:postgresql://localhost:5432/techeermarket
#    username: postgres
#    password: 1234
#    driverClassName: org.postgresql.Driver
=======
    url: jdbc:postgresql://localhost:5432/techeermarket
    username: postgres
    password: 1234
    driverClassName: org.postgresql.Driver
>>>>>>> (TM-10) 카카오,구글,네이버 로그인
=======
    url: jdbc:postgresql://${CLOUD_AWS_DB_HOST}:5432/${CLOUD_AWS_DB_DATABASE_NAME}
    username: ${CLOUD_AWS_DB_USERNAME}
    password: ${CLOUD_AWS_DB_PASSWORD}
    driverClassName: org.postgresql.Driver
#  datasource:
#    url: jdbc:postgresql://localhost:5432/techeermarket
#    username: postgres
#    password: 1234
#    driverClassName: org.postgresql.Driver
>>>>>>> (TM-24) DB 클라우드 초기설정 (B)
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

security:
  oauth2:
    client:
      registration:
        kakao:
          client-id: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID} # aa81c883664edf4219ffc21a62f49749
          client-secret: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_SECRECT}
          client-name: Kakao
          scope: profile_nickname, account_email
          redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          client-authentication-method: POST
          authorization-grant-type: authorization_code
        google:
          client-id: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
          client-secret: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRECT}
          client-name: Google
          scope: profile, email
          redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
        naver:
          client-id: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_ID}
          client-secret: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_SECRECT}
          client-name: Naver
          scope: name, email, profile_image
          redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}" # (== http://localhost:8080/login/oauth2/code/naver)
          authorization-grant-type: authorization_code
      provider:
        kakao:
          authorization-uri: https://kauth.kakao.com/oauth/authorize
          token-uri: https://kauth.kakao.com/oauth/token
          user-info-uri: https://kapi.kakao.com/v2/user/me
          jwk-set-uri: https://s3.ap-northeast-2.amazonaws.com/s3.karako.com/path/to/jwk_set.json
          user-name-attribute: id
        google:
          authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
          token-uri: https://www.googleapis.com/oauth2/v4/token
          user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
        naver:
          authorization_uri: https://nid.naver.com/oauth2.0/authorize
          token_uri: https://nid.naver.com/oauth2.0/token
          user-info-uri: https://openapi.naver.com/v1/nid/me
          user_name_attribute: response
          jwk-set-uri: temp
<<<<<<< refs/remotes/origin/develop
<<<<<<< refs/remotes/origin/develop

jwt:
  secret: VlwEyVBsYt9V7zq57TejMnVUyzblYcfPQye08f7MGVA9XkHa
=======
>>>>>>> (TM-10) 카카오,구글,네이버 로그인
=======

jwt:
  secret: VlwEyVBsYt9V7zq57TejMnVUyzblYcfPQye08f7MGVA9XkHa
>>>>>>> (TM-24) DB 클라우드 초기설정 (B)

spring:
  datasource:
    url: jdbc:postgresql://175.118.95.185:5432/techeermarket
    username: postgres
    password: 1234
    driverClassName: org.postgresql.Driver

#  datasource:
#    url: jdbc:postgresql://localhost:5432/techeermarket
#    username: postgres
#    password: 1234
#    driverClassName: org.postgresql.Driver
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

#cloud:
#  aws:
#    credentials:
#      accessKey: ${CLOUD_AWS_ACCESS_KEY_ID}
#      secretKey: ${CLOUD_AWS_SECRET_ACCESS_KEY}
#    s3:
#      bucket: ${CLOUD_AWS_S3_BUCKETNAME}
#    region:
#      static: ${CLOUD_AWS_S3_REGION}
#    stack:
#      auto: false


#security:
#  oauth2:
#    client:
#      registration:
#        kakao:
#          restapi-key: b0a4f785ed460ba74d3b23c3fd538e2a
#          client-id: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID} # aa81c883664edf4219ffc21a62f49749
#          client-secret: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_SECRECT}
#          client-name: Kakao
#          scope: profile_nickname, account_email
#          redirect-uri: "http://localhost:3000/auth/kakao"
#          client-authentication-method: POST
#          authorization-grant-type: authorization_code
#        google:
#          client-id: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
#          client-secret: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRECT}
#          client-name: Google
#          scope: profile, email
#          redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
#        naver:
#          client-id: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_ID}
#          client-secret: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_SECRECT}
#          client-name: Naver
#          scope: name, email, profile_image
#          redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}" # (== http://localhost:8080/login/oauth2/code/naver)
#          authorization-grant-type: authorization_code
#      provider:
#        kakao:
#          authorization-uri: https://kauth.kakao.com/oauth/authorize
#          token-uri: https://kauth.kakao.com/oauth/token
#          user-info-uri: https://kapi.kakao.com/v2/user/me
#          jwk-set-uri: https://s3.ap-northeast-2.amazonaws.com/s3.karako.com/path/to/jwk_set.json
#          user-name-attribute: id
#        google:
#          authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
#          token-uri: https://www.googleapis.com/oauth2/v4/token
#          user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
#          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
#        naver:
#          authorization_uri: https://nid.naver.com/oauth2.0/authorize
#          token_uri: https://nid.naver.com/oauth2.0/token
#          user-info-uri: https://openapi.naver.com/v1/nid/me
#          user_name_attribute: response
#          jwk-set-uri: temp
#
#jwt:
#  secret: VlwEyVBsYt9V7zq57TejMnVUyzblYcfPQye08f7MGVA9XkHa

#logging:
#    level:
#      root: DEBUG